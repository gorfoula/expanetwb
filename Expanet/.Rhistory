tempdir()
tempfile("plot", fileext = c(".ps", ".pdf"))
tempdir()
?tempdir
tempdir()
dir.create(paste(tempdir(),"/C",sep = ))
dir.create(paste(tempdir(),"/C",sep = ""))
list.files(tempdir(),pattern = ".")
temp.folder
tempdir()
tempfile("plot", fileext = c(""))
tempfile("res", fileext = c(""))
tempfile("res", fileext = c(""))
strsplit(tempfile("res", fileext = c("")),split = "/")
strsplit(tempfile("res", fileext = c("")),split = "/")[3]
strsplit(tempfile("res", fileext = c("")),split = "/")[[1]][3]
strsplit(tempfile("res", fileext = c("")),split = "/")[[1]][4]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dir.create("/tmp/Rtmps36ia1/res716c3b43d18d/C")
dir.create("./tmp/Rtmps36ia1/res716c3b43d18d/C")
dir.create("tmp/Rtmps36ia1/res716c3b43d18d/C")
dir.create("C")
dir.create("data/output/res716c3b43d18d")
dir.create("data/output/res716c3b43d18d/C")
runApp()
runApp()
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?dir.create
runApp()
runApp()
Sys.chmod("data/output/res716c67c18041", mode = "0777")
Sys.chmod("data/output/res716c67c18041", mode = "777")
?Sys.chmod
Sys.chmod("data/output/res716c67c18041", mode = "671")
Sys.chmod("data/output/res716c67c18041", mode = "111")
Sys.chmod("data/output/res716c67c18041", mode = "1117")
Sys.chmod("data/output/res716c67c18041", mode = "0777")
Sys.chmod("data/output/res716c67c18041", mode = "7777")
Sys.chmod("data/output/res716c67c18041",'775',F)
Sys.chmod("data/output/res716c67c18041",'777',F)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(promises)
library(future)
install.packages("future")
runApp()
runApp()
install.packages("promises")
install.packages("promises")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
install_github
install.packages("install_github")
install.packages("devtools")
library(devtools)
install_github("rstudio/shiny@async")
runApp()
#
# This is the server logic of a Shiny web application. You can run the
# application by clicking 'Run App' above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(future)
library("shiny")
runApp()
install.packages("dplyr")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
randu
dim(randu)
sample(1:400,1)
load("data/geneSets.RData")
#load("data/pbe_path.Rdata")
load('data/control.tm.5.RData')
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
list.files("data/output/resfd926bf4ed7/C",pattern = ".[.]norm$", full.names = TRUE)
list.files("data/output/resfd926bf4ed7/C",pattern = ".[.]E$", full.names = TRUE)
list.files("data/output/resfd935aacbe2/C",pattern = ".[.]E$", full.names = TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a<-list()
a["t"]
a["t"]=7
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
load("data/output/res1cd8158e258f/status.R")
View(status)
View(status)
load("data/output/res1cd8158e258f/status.R")
View(status)
load("data/output/res1cd8158e258f/status.R")
View(status)
load("data/output/res1cd8158e258f/status.R")
View(status)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
tags$h3("[1] Analysis just started.")
a=tags$h3("[1] Analysis just started.")
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
load("orgs_gene_sets/pbe.R")
runApp()
load("orgs_gene_sets/pbe.R")
View(gene.set)
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
?read.csv
d.score<-read.csv(paste("data/output/res1b8228e50e5c","/scores.csv",sep = ""),header = TRUE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8228e50e5c/scores.csv",sep = ""),header = TRUE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8249beac1/scores.csv",sep = ""),header = TRUE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8249beac1/CVST/scores.csv",sep = ""),header = TRUE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8249beac1/scores.csv",sep = ""),header = FALSE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8249beac1/scores.csv",sep = ""),header = FALSE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8249beac1/scores.csv",sep = ""),header = TRUE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8249beac1/CVST/scores.csv",sep = ""),header = FALSE,sep = ",")
View(d.score)
d<-read.delim(paste("data/output/res1b8249beac1/CVST/scores.csv",sep = ""),header = TRUE,sep = ",")
?read.delim
d<-read.table(paste("data/output/res1b8249beac1/CVST/scores.csv",sep = ""),header = TRUE,sep = ",")
d.score<-read.csv(paste("data/output/res1b8249beac1/CVST/scores.csv",sep = ""),header = FALSE)
d.score<-read.csv(paste("data/output/res1b8249beac1/CVST/scores.csv",sep = ""),header = TRUE)
library(readr)
install.packages("readr")
d.score<-read.csv(paste("data/output/res1b8249beac1/CVST/scores.csv",sep = ""),header = FALSE)
View(d.score)
load("orgs_gene_sets/pbe.R")
View(gene.set)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
d.score<-read.csv("data/output/res2fc0201ea26a/CVST/scores.csv",sep = ""),header = TRUE,sep = ",")
d.score<-read.csv("data/output/res2fc0201ea26a/CVST/scores.csv",,header = TRUE,sep = ",")
d.score<-read.csv("data/output/res2fc0201ea26a/CVST/scores.csv",header = TRUE,sep = ",")
View(d.score)
source("auxiliary_funcs.R")
load(paste(kegg.folder,"/",orgs.sel[found,1],"_names.R",sep = ""))
load("org_gene_sets/pbe_names.R")
load("orgs_gene_sets/pbe_names.R")
View(paths.names)
res=map.path.names(d.score,paths.names)
matrix(nrow = 10,ncol = 1,"")
matrix(nrow = 10,ncol = 1,NULL)
source("auxiliary_funcs.R")
res=map.path.names(d.score,paths.names)
View(res)
nrow(d.score)
source("auxiliary_funcs.R");res=map.path.names(d.score,paths.names)
source("auxiliary_funcs.R");res=map.path.names(d.score,paths.names)
source("auxiliary_funcs.R");res=map.path.names(d.score,paths.names)
source("auxiliary_funcs.R");res=map.path.names(d.score,paths.names)
source("auxiliary_funcs.R");res=map.path.names(d.score,paths.names)
View(res)
View(d.score)
runApp()
runApp()
View(exec2)
runApp()
runApp()
View(progressGroup)
runApp()
runApp()
runApp()
?list.files
runApp()
runApp()
runApp()
?downloadHandler
runApp()
runApp()
runApp()
runApp()
list.files("data/output/res2fc02ec4463a/C/graphs/",pattern = ".[.]gml$",full.names = FALSE)
runApp()
runApp()
runApp()
load("orgs_gene_sets/pbe.R")
a=gene.set[1:10]
View(gene.set)
gene.set[1]
runApp()
s<read.csv("data/output/res2fc038cfca7d/CVST/score.csv",header = TRUE,sep = ",")
d<-read.csv("data/output/res2fc038cfca7d/CVST/score.csv",header = TRUE,sep = ",")
d<-read.csv("data/output/res2fc038cfca7d/CVST/scores.csv",header = TRUE,sep = ",")
d
t(d)
runApp()
d<-read.csv("data/output/res2fc038cfca7d/CVST/scores.csv",header = TRUE,sep = ",")
d
colnames(d)
t(d)
colnames(d)
colnames(t(d) )
row.names(t(d) )
ncol(d)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderTable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
g<-read_graph("data/output/res2fc0600d53b9/C/graphs/pbe00010.gml", format = c("gml"))
plot(g, layout=layout_with_fr, vertex.size=4, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5,vertex.label.dist=1.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5,vertex.label.dist=5.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5,vertex.label.dist=25.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5,vertex.label.dist=25.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5,vertex.label.dist=25.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5,vertex.label.dist=25.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=0.5, vertex.color="black", edge.arrow.size=0.5,vertex.label.dist=25.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=6.5, vertex.color="red", edge.arrow.size=0.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=6.5, vertex.color="b", edge.arrow.size=0.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=6.5, vertex.color="black", edge.arrow.size=0.5)
plot(g, layout=layout_with_fr, vertex.size=20, vertex.label.dist=6.5, vertex.color="black", edge.arrow.size=0.5)
plot(g, layout=layout_with_fr, vertex.size=10, vertex.label.dist=6.5, vertex.color="black", edge.arrow.size=0.5)
?igraph::plot.igraph
igraph::plot.igraph(g)
V(g)
length(V(g))
colors()
colors()[5]
length(colors())
vertex_attr(g)
vertex_attr(g,"issoi")
which(vertex_attr(g,"issoi"))
cls=matrix(ncol = length(V(g)),nrow = 1)
cls=matrix(ncol = length(V(g)),nrow = 1,"turquoise")
hich(vertex_attr(g,"issoi")==1)
which(vertex_attr(g,"issoi")==1)
soi=which(vertex_attr(g,"issoi")==1)
cls[soi]="red"
igraph::plot.igraph(g,mark.col = cls)
igraph::plot.igraph(g, layout=layout_with_kk,mark.col = as.vector(cls))
igraph::plot.igraph(g, layout=layout_with_ft,mark.col = as.vector(cls))
igraph::plot.igraph(g, layout=layout_with_fr,mark.col = as.vector(cls))
cls[soi]="grey80"
cls=rep("black",1,length(V(g)))
cls[soi]="grey80"
igraph::plot.igraph(g, layout=layout_with_fr,mark.col = as.vector(cls))
plot(g, layout=layout_with_fr,vertex.color = as.vector(cls))
plot(g, layout=layout_with_fr,vertex.color = as.vector(cls),label.font="Arial")
plot(g, layout=layout_with_fr,vertex.color = as.vector(cls))
plot(g, layout=layout_with_fr,vertex.color = as.vector(cls),label.font="Time New Roman")
plot(g, layout=layout_with_fr,vertex.color = as.vector(cls),label.font="Calibri")
plot(g, layout=layout_with_fr,vertex.color = as.vector(cls),label.color="red")
igraph::plot.igraph(g, layout=layout_with_fr,vertex.color = as.vector(cls),label.color="red")
igraph::plot.igraph(g, layout=layout_with_fr,vertex.color = as.vector(cls),label.color="red")
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red")
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red")
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red", vertex.size=10, vertex.label.dist=6.5)
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red", vertex.size=10, vertex.label.dist=1.5)
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red", vertex.size=10, vertex.label.dist=1.5,vertex.label.family="Helvetica")
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red", vertex.size=10, vertex.label.dist=1.5,vertex.label.family="Helvetica",vertex.label.cex=0.5
)
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red", vertex.size=10, vertex.label.dist=1.5,vertex.label.family="Helvetica",vertex.label.cex=1.5)
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red", vertex.size=10, vertex.label.dist=1.5,vertex.label.family="Helvetica",vertex.label.cex=0.5)
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),label.color="red", vertex.size=10, vertex.label.dist=1.5,vertex.label.family="Helvetica",vertex.label.cex=0.5,vertex.label.color="black")
library(igraph)
g<-read_graph("data/output/control/graphs/pbe03020_RNA_polymerase.gml", format = c("gml"))
cls=rep("black",1,length(V(g)))
soi=which(vertex_attr(g,"issoi")==1)
cls[soi]="grey80"
lbs_cols=rep("black",1,length(V(g)))
lbs_cols[soi]="grey80"
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=10, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color="black")
colorRamp()
colorRamp(100)
colours()
cls=rep("grey80",1,length(V(g)))
soi=which(vertex_attr(g,"issoi")==1)
cls[soi]="skyblue1"
lbs_cols=rep("grey80",1,length(V(g)))
lbs_cols[soi]="skyblue1"
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=10, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color="black")
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color="black")
g<-read_graph("data/output/control/graphs/pbe04146_Peroxisome.gml", format = c("gml"))
cls=rep("grey80",1,length(V(g)))
soi=which(vertex_attr(g,"issoi")==1)
cls[soi]="skyblue1"
lbs_cols=rep("grey80",1,length(V(g)))
lbs_cols[soi]="skyblue1"
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color="black")
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color=lbs_cols)
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color=lbs_cols,vertex.label.font=2)
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color=lbs_cols,vertex.label.font=2)
g<-read_graph("data/output/control/graphs/pbe04146_Peroxisome.gml", format = c("gml"))
cls=rep("grey80",1,length(V(g)))
soi=which(vertex_attr(g,"issoi")==1)
cls[soi]="skyblue1"
lbs_cols=rep("grey80",1,length(V(g)))
lbs_cols[soi]="black"
igraph::plot.igraph(g, layout=layout_nicely,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Helvetica",vertex.label.cex=0.5,
vertex.label.color=lbs_cols,vertex.label.font=2)
igraph::plot.igraph(g, layout=layout_as_tree,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Calibri",vertex.label.cex=0.5,
vertex.label.color=lbs_cols,vertex.label.font=2)
igraph::plot.igraph(g, layout=layout_with_fr,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Calibri",vertex.label.cex=0.5,
vertex.label.color=lbs_cols,vertex.label.font=2)
p<-igraph::plot.igraph(g, layout=layout_with_fr,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Calibri",vertex.label.cex=0.5,
vertex.label.color=lbs_cols,vertex.label.font=2)
p
plot(p)
runApp()
runApp()
switch(lat,
"tree" = layout_as_tree,
"auto" = layout_nicely,
"Fruchterman-Reingold" = layout_with_fr,
"Kamada-Kawai"=layout_with_kk)
runApp()
runApp()
lat="tree"
switch(lat,
"tree" = layout_as_tree,
"auto" = layout_nicely,
"Fruchterman-Reingold" = layout_with_fr,
"Kamada-Kawai"=layout_with_kk)
runApp()
g<-read_graph("data/output/control/graphs/pbe04146_Peroxisome.gml", format = c("gml"))
cls=rep("grey80",1,length(V(g)))
soi=which(vertex_attr(g,"issoi")==1)
cls[soi]="skyblue1"
lbs_cols=rep("grey80",1,length(V(g)))
lbs_cols[soi]="black"
par(mar=c(0,0,0,0))
igraph::plot.igraph(g, layout=layout_with_fr,vertex.color = as.vector(cls),
label.color="red", vertex.size=5, vertex.label.dist=1.5,
vertex.label.family="Calibri",vertex.label.cex=0.5,
vertex.label.color=lbs_cols,vertex.label.font=2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
